// Code generated by MockGen. DO NOT EDIT.
// Source: domain/services/transaction/transaction.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	repos "github.com/deuna/payment/infraestructure/db/repos"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockTransaction is a mock of Transaction interface.
type MockTransaction struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionMockRecorder
}

// MockTransactionMockRecorder is the mock recorder for MockTransaction.
type MockTransactionMockRecorder struct {
	mock *MockTransaction
}

// NewMockTransaction creates a new mock instance.
func NewMockTransaction(ctrl *gomock.Controller) *MockTransaction {
	mock := &MockTransaction{ctrl: ctrl}
	mock.recorder = &MockTransactionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransaction) EXPECT() *MockTransactionMockRecorder {
	return m.recorder
}

// ListTx mocks base method.
func (m *MockTransaction) ListTx(arg0 context.Context, arg1 string) ([]repos.Tx, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTx", arg0, arg1)
	ret0, _ := ret[0].([]repos.Tx)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTx indicates an expected call of ListTx.
func (mr *MockTransactionMockRecorder) ListTx(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTx", reflect.TypeOf((*MockTransaction)(nil).ListTx), arg0, arg1)
}

// Place mocks base method.
func (m *MockTransaction) Place(arg0 context.Context, arg1 float64, arg2 string) (*uuid.UUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Place", arg0, arg1, arg2)
	ret0, _ := ret[0].(*uuid.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Place indicates an expected call of Place.
func (mr *MockTransactionMockRecorder) Place(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Place", reflect.TypeOf((*MockTransaction)(nil).Place), arg0, arg1, arg2)
}

// Refund mocks base method.
func (m *MockTransaction) Refund(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Refund", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Refund indicates an expected call of Refund.
func (mr *MockTransactionMockRecorder) Refund(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Refund", reflect.TypeOf((*MockTransaction)(nil).Refund), arg0, arg1, arg2)
}
